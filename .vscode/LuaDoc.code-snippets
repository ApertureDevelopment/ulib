{
	// Place your ulib workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"ldoc-author": {
		"prefix": "@author",
		"body": [
			"@author ${1:Author} <${2:author@example.com}>"
		],
		"description": "An author of the module or file."
	},
	"ldoc-copyright": {
		"prefix": "@copyright",
		"body": [
			"@copyright ${1:$CURRENT_YEAR} - ${2:name}"
		],
		"description": "The copyright notice of the module or file. LuaDoc adds a © sign between the label (Copyright) and the given text (e.g. 2004-2007 Kepler Project)."
	},
	"ldoc-license": {
		"prefix": "@license",
		"body": [
			"@license by-nc-sa 3.0"
		],
		"description": "The copyright notice of the module or file. LuaDoc adds a © sign between the label (Copyright) and the given text (e.g. 2004-2007 Kepler Project)."
	},
	"ldoc-field": {
		"prefix": "@field",
		"body": [
			"@field"
		],
		"description": "A named member of a table"
	},
	"ldoc-param": {
		"prefix": "@param",
		"body": [
			"@param ${2:variable} ${3:description}"
		],
		"description": "Formal arguments of a function (multiple)"
	},
	"ldoc-return": {
		"prefix": "@return",
		"body": [
			"@return ${2:description}"
		],
		"description": "Returned values of a function (multiple)"
	},
	"ldoc-tparam": {
		"prefix": "@tparam",
		"body": [
			"@tparam ${1|number,string,boolean,table,entity,player|} ${2:variable} ${3:description}"
		],
		"description": "Formal arguments of a function (multiple) with type"
	},
	"ldoc-treturn": {
		"prefix": "@treturn",
		"body": [
			"@treturn ${1|number,string,boolean,table,entity,player|} ${2:description}"
		],
		"description": "Returned values of a function (multiple) with type"
	},
	"ldoc-release": {
		"prefix": "@release",
		"body": [
			"@release ${1:description}"
		],
		"description": "Version of this module"
	},
	"ldoc-see": {
		"prefix": "@see",
		"body": [
			"@see ${1:description}"
		],
		"description": "Reference other documented items"
	},
	"ldoc-usage": {
		"prefix": "@usage",
		"body": [
			"@usage ${1:description}"
		],
		"description": "Give an example of a functions use. (Has a somewhat different meaning when used with @module)"
	},
	"ldoc-module": {
		"prefix": "@module",
		"body": [
			"@module ${1:description}"
		],
		"description": "A Lua module containing functions and tables, which may be inside sections"
	},
	"ldoc-classmod": {
		"prefix": "@classmod",
		"body": [
			"@classmod ${1:description}"
		],
		"description": "Like @module but describing a class"
	},
	"ldoc-submodule": {
		"prefix": "@submodule",
		"body": [
			"@submodule ${1:description}"
		],
		"description": "A file containing definitions that you wish to put into the named master module"
	},
	"ldoc-script": {
		"prefix": "@script",
		"body": [
			"@script ${1:description}"
		],
		"description": "A Lua program"
	},
	"ldoc-function": {
		"prefix": "@function",
		"body": [
			"@function ${1:description}"
		],
		"description": "@lfunction. Functions inside a module"
	},
	"ldoc-raise": {
		"prefix": "@raise",
		"body": [
			"@raise ${1:description}"
		],
		"description": "Unhandled error thrown by this function"
	},
	"ldoc-local": {
		"prefix": "@local",
		"body": [
			"@local ${1:description}"
		],
		"description": "explicitly marks a function as not being exported (unless --all)"
	},
	"ldoc-table": {
		"prefix": "@table",
		"body": [
			"@table ${1:description}"
		],
		"description": "A Lua table"
	},
	"ldoc-section": {
		"prefix": "@section",
		"body": [
			"@section ${1:description}"
		],
		"description": "starting a named section for grouping functions or tables together"
	},
	"ldoc-type": {
		"prefix": "@type",
		"body": [
			"@type ${1:description}"
		],
		"description": "a section which describes a class"
	},
	"ldoc-since": {
		"prefix": "@since",
		"body": [
			"@since ${1:ulib version}"
		],
		"description": "Since what version does this function exist?"
	},
	"ldoc-block": {
		"prefix": ["@doc", "--["],
		"body": [
			"--[[",
			"    ${1:function name}",
			"",
			"    ${2:description}",
			"",
			"    ${3:params}",
			"]]"
		],
		"description": "Create a documentation block"
	}
}